version: '3.8'

services:
  # PostgreSQL Database for testing
  test-db:
    image: supabase/postgres:15.1.0.117
    container_name: siteproof-test-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: siteproof_test
    volumes:
      - test-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase services for testing
  test-supabase-auth:
    image: supabase/gotrue:v2.143.0
    container_name: siteproof-test-auth
    depends_on:
      test-db:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:54321
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:postgres@test-db:5432/siteproof_test?search_path=auth
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: "*"
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_SMTP_ADMIN_EMAIL: admin@example.com
      GOTRUE_SMTP_HOST: mailhog
      GOTRUE_SMTP_PORT: 1025
      GOTRUE_SMTP_USER: ""
      GOTRUE_SMTP_PASS: ""
      GOTRUE_SMTP_SENDER_NAME: "SiteProof Test"
    ports:
      - "9999:9999"

  # Test application
  test-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: siteproof-test-app
    depends_on:
      test-db:
        condition: service_healthy
      test-supabase-auth:
        condition: service_started
    environment:
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:postgres@test-db:5432/siteproof_test
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
      NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      TEST_USER_EMAIL: test@example.com
      TEST_USER_PASSWORD: Test123!@#
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
    ports:
      - "3001:3000"
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Running migrations...' &&
        cd /app &&
        pnpm --filter @siteproof/database db:push &&
        echo 'Starting application...' &&
        pnpm --filter @siteproof/web dev
      "

  # Playwright test runner
  playwright:
    image: mcr.microsoft.com/playwright:v1.40.0-jammy
    container_name: siteproof-playwright
    depends_on:
      - test-app
    environment:
      PLAYWRIGHT_BASE_URL: http://test-app:3000
      TEST_USER_EMAIL: test@example.com
      TEST_USER_PASSWORD: Test123!@#
    volumes:
      - ./apps/web/tests:/tests
      - ./apps/web/playwright.config.ts:/playwright.config.ts
      - ./test-results:/test-results
      - ./playwright-report:/playwright-report
    working_dir: /
    command: >
      sh -c "
        echo 'Waiting for application to be ready...' &&
        sleep 30 &&
        echo 'Running Playwright tests...' &&
        npx playwright test --config=/playwright.config.ts --reporter=html
      "

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: siteproof-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  test-db-data: